{"version":3,"sources":["services/api.js","components/Container/index.js","pages/Main/styles.js","pages/Main/index.js","pages/Repository/styles.js","pages/Repository/index.js","routes.js","styles/global.js","App.js","index.js"],"names":["api","axios","create","baseURL","Container","styled","div","Form","form","InputForm","input","props","error","ErrorLabel","small","rotate","keyframes","SubmitButton","button","attrs","type","disabled","loading","css","List","ul","Main","state","newRepo","repositories","handleInputChange","e","setState","target","value","handleSubmit","a","preventDefault","find","repo","name","Error","get","catch","response","status","data","full_name","message","toString","substring","localStorage","getItem","this","JSON","parse","_","prevState","setItem","stringify","onSubmit","placeholder","onChange","color","size","map","repository","key","to","encodeURIComponent","Component","Loading","Owner","header","IssueList","IssueTypes","Navigation","NavButton","Repository","issues","page","issueType","handlePageChange","params","handleIssueType","match","repoName","decodeURIComponent","Promise","all","src","owner","avatar_url","alt","login","description","defaultChecked","className","issue","String","id","user","href","html_url","title","labels","label","length","onClick","Routes","path","exact","component","createGlobalStyle","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f4611ef1.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.github.com/',\n});\n\nexport default api;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  max-width: 700px;\n  background: #fff;\n  border-radius: 4px;\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\n  padding: 30px;\n  margin: 80px auto;\n\n  h1 {\n    font-size: 20px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    svg {\n      margin-right: 10px;\n    }\n  }\n`;\n\nexport default Container;\n","import styled, { keyframes, css } from 'styled-components';\n\nexport const Form = styled.form`\n  margin-top: 30px;\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const InputForm = styled.input`\n  flex: 1;\n  border: 1px solid ${props => (props.error ? '#ff7070' : '#eee')};\n  padding: 10px 15px;\n  border-radius: 4px;\n  font-size: 16px;\n`;\n\nexport const ErrorLabel = styled.small`\n  color: #ff7070;\n  font-size: 15px;\n  margin-top: 10px;\n`;\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nexport const SubmitButton = styled.button.attrs(props => ({\n  type: 'submit',\n  disabled: props.loading === 'true',\n}))`\n  background: #7159c1;\n  border: 0;\n  padding: 0 15px;\n  margin-left: 10px;\n  border-radius: 4px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &[disabled] {\n    cursor: not-allowed;\n    opacity: 0.6;\n  }\n\n  ${props =>\n    props.loading === 'true' &&\n    css`\n      svg {\n        animation: ${rotate} 2s linear infinite;\n      }\n    `}\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  margin-top: 30px;\n\n  li {\n    padding: 15px 0;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n\n    & + li {\n      border-top: 1px solid #eee;\n    }\n\n    a {\n      color: #7159c1;\n      text-decoration: none;\n    }\n  }\n`;\n","import React, { Component } from 'react';\nimport { FaGithubAlt, FaPlus, FaSpinner } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\n\nimport api from '../../services/api';\n\nimport Container from '../../components/Container';\nimport { ErrorLabel, InputForm, Form, SubmitButton, List } from './styles';\n\nexport default class Main extends Component {\n  state = {\n    newRepo: '',\n    repositories: [],\n    loading: false,\n    error: '',\n  };\n\n  // loads data from localStorage.\n  componentDidMount() {\n    const repositories = localStorage.getItem('repositories');\n\n    if (repositories) {\n      this.setState({ repositories: JSON.parse(repositories) });\n    }\n  }\n\n  // saves data in localStorage.\n  componentDidUpdate(_, prevState) {\n    const { repositories } = this.state;\n\n    if (prevState.repositories !== repositories) {\n      localStorage.setItem('repositories', JSON.stringify(repositories));\n    }\n  }\n\n  handleInputChange = e => {\n    this.setState({ newRepo: e.target.value, error: '' });\n  };\n\n  handleSubmit = async e => {\n    e.preventDefault();\n\n    this.setState({ loading: true });\n\n    try {\n      const { newRepo, repositories } = this.state;\n\n      if (repositories.find(repo => repo.name === newRepo)) {\n        throw new Error('Repository already added');\n      }\n\n      const response = await api.get(`repos/${newRepo}`).catch(error => {\n        if (error.response && error.response.status === 404) {\n          throw new Error('No repository found');\n        } else {\n          throw new Error('Connection error');\n        }\n      });\n\n      const data = {\n        name: response.data.full_name,\n      };\n\n      this.setState({\n        repositories: [...repositories, data],\n        newRepo: '',\n        loading: false,\n      });\n    } catch (error) {\n      // removes Error: prefix from message\n      const message = error.toString().substring(7);\n      this.setState({ error: message, loading: false });\n    }\n  };\n\n  render() {\n    const { newRepo, loading, repositories, error } = this.state;\n\n    return (\n      <Container>\n        <h1>\n          <FaGithubAlt />\n          Repositories\n        </h1>\n\n        <Form onSubmit={this.handleSubmit}>\n          <InputForm\n            type=\"text\"\n            placeholder=\"Add repository\"\n            value={newRepo}\n            onChange={this.handleInputChange}\n            error={error}\n          />\n          <SubmitButton loading={loading.toString()}>\n            {loading ? (\n              <FaSpinner color=\"#FFF\" size=\"14\" />\n            ) : (\n              <FaPlus color=\"#FFF\" size=\"14\" />\n            )}\n          </SubmitButton>\n        </Form>\n        {error && <ErrorLabel>{error}</ErrorLabel>}\n        <List>\n          {repositories.map(repository => (\n            <li key={repository.name}>\n              <span>{repository.name}</span>\n              <Link to={`/repository/${encodeURIComponent(repository.name)}`}>\n                Details\n              </Link>\n            </li>\n          ))}\n        </List>\n      </Container>\n    );\n  }\n}\n","import styled from 'styled-components';\n\nexport const Loading = styled.div`\n  color: #fff;\n  font-size: 30px;\n  font-weight: bold;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n\nexport const Owner = styled.header`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n\n  a {\n    color: #fff;\n    background: #7159c1;\n    font-size: 16px;\n    text-decoration: none;\n    position: absolute;\n    left: 0px;\n    padding: 10px;\n    border-radius: 5px;\n\n    svg {\n      margin-right: 5px;\n    }\n  }\n\n  img {\n    max-width: 120px;\n    border-radius: 50%;\n    margin-top: 20px;\n  }\n\n  h1 {\n    font-size: 24px;\n    margin-top: 10px;\n  }\n\n  p {\n    margin-top: 5px;\n    font-size: 14px;\n    color: #666;\n    line-height: 1.4;\n    text-align: center;\n    max-width: 400px;\n  }\n`;\n\nexport const IssueList = styled.ul`\n  padding-top: 30px;\n  margin-top: 30px;\n  border-top: 1px solid #eee;\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  li {\n    display: flex;\n    width: 100%;\n    padding: 15px 10px;\n    border: 1px solid #eee;\n    border-radius: 4px;\n\n    & + li {\n      margin-top: 10px;\n    }\n\n    img {\n      width: 36px;\n      height: 36px;\n      border-radius: 50%;\n      border: 2px solid #eee;\n    }\n\n    div {\n      flex: 1;\n      margin-left: 15px;\n\n      strong {\n        font-size: 16px;\n\n        a {\n          text-decoration: none;\n          color: #333;\n\n          &:hover {\n            color: #7159c1;\n          }\n        }\n\n        span {\n          background: #eee;\n          color: #333;\n          border-radius: 2px;\n          font-size: 12px;\n          font-weight: 600;\n          height: 20px;\n          padding: 3px 4px;\n          margin-left: 10px;\n        }\n      }\n\n      p {\n        margin-top: 5px;\n        font-size: 12px;\n        color: #999;\n      }\n    }\n  }\n`;\n\nexport const IssueTypes = styled.div`\n  margin: 15px 0;\n  display: flex;\n  justify-content: space-evenly;\n\n  span {\n    background: #7159c1;\n    color: #fff;\n    padding: 5px;\n    border-radius: 5px;\n    display: flex;\n    align-items: center;\n  }\n\n  input {\n    margin-right: 5px;\n  }\n\n  .open {\n    background: #278a08;\n  }\n\n  .closed {\n    background: #d60000;\n  }\n`;\n\nexport const Navigation = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n`;\n\nexport const NavButton = styled.button.attrs(props => ({\n  type: 'button',\n  disabled: props.disabled,\n}))`\n  border: 0;\n  background: #7159c1;\n  color: #fff;\n  padding: 10px;\n  margin-right: 5px;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover {\n    background: #9150c9;\n  }\n\n  &[disabled] {\n    cursor: not-allowed;\n    opacity: 0.6;\n  }\n`;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { FaArrowLeft, FaArrowRight } from 'react-icons/fa';\n\nimport api from '../../services/api';\nimport {\n  Loading,\n  Owner,\n  IssueList,\n  IssueTypes,\n  Navigation,\n  NavButton,\n} from './styles';\n\nimport Container from '../../components/Container';\n\nexport default class Repository extends Component {\n  static propTypes = {\n    match: PropTypes.shape({\n      params: PropTypes.shape({ repository: PropTypes.string }),\n    }).isRequired,\n  };\n\n  state = {\n    repository: {},\n    issues: [],\n    loading: true,\n    page: 1,\n    issueType: 'all',\n  };\n\n  async componentDidMount() {\n    const { match } = this.props;\n    const { page, issueType } = this.state;\n    const repoName = decodeURIComponent(match.params.repository);\n\n    const [repository, issues] = await Promise.all([\n      api.get(`repos/${repoName}`),\n      api.get(`repos/${repoName}/issues`, {\n        params: {\n          state: issueType,\n          page,\n        },\n      }),\n    ]);\n\n    this.setState({\n      repository: repository.data,\n      issues: issues.data,\n      loading: false,\n    });\n  }\n\n  handlePageChange = async page => {\n    const { repository, issueType } = this.state;\n\n    if (page < 1) {\n      return;\n    }\n\n    this.setState({ loading: true });\n\n    const response = await api.get(`repos/${repository.full_name}/issues`, {\n      params: {\n        state: issueType,\n        page,\n      },\n    });\n\n    this.setState({ page, loading: false, issues: response.data });\n  };\n\n  handleIssueType = async type => {\n    const { repository, issueType } = this.state;\n\n    if (type === issueType) {\n      return;\n    }\n\n    this.setState({ loading: true });\n\n    const response = await api.get(`repos/${repository.full_name}/issues`, {\n      params: {\n        state: type,\n        page: 1,\n      },\n    });\n\n    this.setState({\n      page: 1,\n      loading: false,\n      issues: response.data,\n      issueType: type,\n    });\n  };\n\n  render() {\n    const { repository, issues, loading, page, issueType } = this.state;\n\n    if (loading) {\n      return <Loading>Loading</Loading>;\n    }\n\n    return (\n      <Container>\n        <Owner>\n          <Link to=\"/\">\n            <FaArrowLeft size=\"10\" />\n            back\n          </Link>\n          <img src={repository.owner.avatar_url} alt={repository.owner.login} />\n          <h1>{repository.name}</h1>\n          <p>{repository.description}</p>\n        </Owner>\n\n        <IssueTypes>\n          <span>\n            <input\n              defaultChecked={issueType === 'all'}\n              type=\"radio\"\n              name=\"type\"\n              onChange={() => {\n                this.handleIssueType('all');\n              }}\n            />\n            All\n          </span>\n          <span className=\"open\">\n            <input\n              defaultChecked={issueType === 'open'}\n              type=\"radio\"\n              name=\"type\"\n              onChange={() => {\n                this.handleIssueType('open');\n              }}\n            />\n            Open\n          </span>\n          <span className=\"closed\">\n            <input\n              defaultChecked={issueType === 'closed'}\n              type=\"radio\"\n              name=\"type\"\n              onChange={() => {\n                this.handleIssueType('closed');\n              }}\n            />\n            Closed\n          </span>\n        </IssueTypes>\n\n        <IssueList>\n          {issues.map(issue => (\n            <li key={String(issue.id)}>\n              <img src={issue.user.avatar_url} alt={issue.user.login} />\n              <div>\n                <strong>\n                  <a href={issue.html_url}>{issue.title}</a>\n                  {issue.labels.map(label => (\n                    <span key={String(label.id)}>{label.name}</span>\n                  ))}\n                </strong>\n                <p>{issue.user.login}</p>\n              </div>\n            </li>\n          ))}\n          {issues.length === 0 && <h3>No issues found</h3>}\n        </IssueList>\n\n        <Navigation>\n          <NavButton\n            disabled={page === 1}\n            onClick={() => {\n              this.handlePageChange(page - 1);\n            }}\n          >\n            <FaArrowLeft size=\"14\" />\n          </NavButton>\n          <NavButton\n            onClick={() => {\n              this.handlePageChange(page + 1);\n            }}\n          >\n            <FaArrowRight size=\"14\" />\n          </NavButton>\n        </Navigation>\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport Main from './pages/Main';\nimport Repository from './pages/Repository';\n\nexport default function Routes() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact component={Main} />\n        <Route path=\"/repository/:repository\" component={Repository} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  html, body, #root {\n    min-height: 100%;\n  }\n\n  body {\n    background: #7159C1;\n    -webkit-font-smoothing: antialiased !important;\n  }\n\n  body, input, button {\n    color: #222;\n    font-size: 14px;\n    font-family: Arial, Helvetica, sans-serif;\n  }\n\n  button: {\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\n\nimport Routes from './routes';\nimport GlobalStyle from './styles/global';\n\nfunction App() {\n  return (\n    <>\n      <Routes />\n      <GlobalStyle />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}